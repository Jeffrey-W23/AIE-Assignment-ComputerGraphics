// includes, using, etc
#pragma once

// forward declares
struct GLFWwindow;

// namespace age for A Game Engine
namespace age {

	//--------------------------------------------------------------------------------------
	// Application object. The main application class.
	//--------------------------------------------------------------------------------------
	class Application
	{
	public:

		//--------------------------------------------------------------------------------------
		// Default Constructor.
		//--------------------------------------------------------------------------------------
		Application();

		//--------------------------------------------------------------------------------------
		// Default Destructor
		//--------------------------------------------------------------------------------------
		virtual ~Application();

		//--------------------------------------------------------------------------------------
		// Initialize:
		//
		// Param:
		//
		// Return:
		//--------------------------------------------------------------------------------------
		bool Initialize(const char* kcTitle, int nWidth, int nHeight);

		//--------------------------------------------------------------------------------------
		// NewWindow:
		//
		// Return:
		//--------------------------------------------------------------------------------------
		virtual bool Start() = 0;

		//--------------------------------------------------------------------------------------
		// Terminate:
		//--------------------------------------------------------------------------------------
		virtual void Terminate() = 0;

		//--------------------------------------------------------------------------------------
		// Run:
		//
		// Param:
		//--------------------------------------------------------------------------------------
		virtual void Run(float deltaTime) = 0;

		//--------------------------------------------------------------------------------------
		// Render:
		//--------------------------------------------------------------------------------------
		virtual void Render() = 0;

		//--------------------------------------------------------------------------------------
		// Debug:
		//--------------------------------------------------------------------------------------
		void Debug();

		//--------------------------------------------------------------------------------------
		// Quit:
		//--------------------------------------------------------------------------------------
		void Quit() { m_bGameOver = true; }

	protected:

		//--------------------------------------------------------------------------------------
		// NewWindow:
		//
		// Param:
		//
		// Return:
		//--------------------------------------------------------------------------------------
		bool NewWindow(const char* kcTitle, int nWidth, int nHeight);

		//--------------------------------------------------------------------------------------
		// DestroyWindow:
		//--------------------------------------------------------------------------------------
		void DestroyWindow();

		//--------------------------------------------------------------------------------------
		// 
		//--------------------------------------------------------------------------------------
		GLFWwindow * m_pWindow;

		//--------------------------------------------------------------------------------------
		// 
		//--------------------------------------------------------------------------------------
		bool m_bGameOver;
	};
}